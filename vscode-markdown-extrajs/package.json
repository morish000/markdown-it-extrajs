{
  "name": "vscode-markdown-extrajs",
  "displayName": "Markdown Preview Extrajs",
  "description": "Add Mermaid.js, Font Awesome, and UnoCSS Runtime to Markdown and Marp.",
  "private": true,
  "type": "module",
  "version": "0.0.17",
  "publisher": "morish000",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/morish000/markdown-it-extrajs.git"
  },
  "engines": {
    "vscode": "^1.96.0"
  },
  "icon": "morish000_128x128.png",
  "keywords": [
    "markdown",
    "preview",
    "marp",
    "mermaid",
    "fontawesome",
    "unocss"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.cjs",
  "contributes": {
    "markdown.previewScripts": [
      "./dist/preview.js"
    ],
    "markdown.markdownItPlugins": true,
    "commands": [
      {
        "category": "Markdown ExtraJS",
        "command": "extension.markdown-extrajs.export",
        "title": "Export Script-Embedded File"
      },
      {
        "category": "Markdown ExtraJS",
        "command": "extension.markdown-extrajs.export-html",
        "title": "Export HTML File"
      },
      {
        "category": "Markdown ExtraJS",
        "command": "extension.markdown-extrajs.export-pdf",
        "title": "Export PDF File(experimental)"
      },
      {
        "category": "Markdown ExtraJS",
        "command": "extension.markdown-extrajs.install-chromium-for-puppeteer",
        "title": "Install Chromium for Puppeteer(experimental)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "when": "resourceLangId == markdown && resourceExtname == .md",
          "command": "extension.markdown-extrajs.export"
        },
        {
          "when": "resourceLangId == markdown && resourceExtname == .md",
          "command": "extension.markdown-extrajs.export-html"
        },
        {
          "when": "resourceLangId == markdown && resourceExtname == .md",
          "command": "extension.markdown-extrajs.export-pdf"
        }
      ]
    },
    "configuration": {
      "title": "Markdown ExtraJS Settings",
      "properties": {
        "markdownExtraJS.discardFrontMatter": {
          "type": "boolean",
          "default": false,
          "description": "Discard front matter from the markdown."
        },
        "markdownExtraJS.outputScriptTag": {
          "type": "boolean",
          "default": false,
          "description": "Output script tag for additional JS."
        },
        "markdownExtraJS.useMermaid": {
          "type": "boolean",
          "default": true,
          "description": "Enable Mermaid support for diagrams."
        },
        "markdownExtraJS.useFontAwesome": {
          "type": "boolean",
          "default": true,
          "description": "Enable Font Awesome icons."
        },
        "markdownExtraJS.useUnoCSS": {
          "type": "boolean",
          "default": true,
          "description": "Enable UnoCSS support."
        },
        "markdownExtraJS.mermaidUrl": {
          "type": "string",
          "default": "https://esm.sh/mermaid",
          "description": "URL to load Mermaid from."
        },
        "markdownExtraJS.mermaidElkUrl": {
          "type": "string",
          "default": "https://esm.sh/@mermaid-js/layout-elk",
          "description": "URL to load Mermaid Layout elk from."
        },
        "markdownExtraJS.fontAwesomeUrl": {
          "type": "string",
          "default": "https://esm.sh/@fortawesome",
          "description": "URL to load Font Awesome from."
        },
        "markdownExtraJS.unoCSSUrl": {
          "type": "string",
          "default": "https://esm.sh/@unocss",
          "description": "URL to load UnoCSS from."
        },
        "markdownExtraJS.iconifyJsonCDN": {
          "type": "string",
          "default": "https://esm.sh",
          "description": "CDN URL for UnoCSS preset icons."
        },
        "markdownExtraJS.featuer.requireTrustedWorkspace": {
          "type": "boolean",
          "default": false,
          "description": "Requires a trusted workspace to enable all features. Changes will take effect after restarting VSCode."
        },
        "markdownExtraJS.featuer.useNoHTML": {
          "type": "boolean",
          "default": false,
          "description": "Enable the feature to function without using HTML tags. Changes will take effect after restarting VSCode."
        },
        "markdownExtraJS.export.htmlLang": {
          "type": "string",
          "default": null,
          "description": "The value of the lang attribute in the HTML tag when exporting to HTML."
        },
        "markdownExtraJS.export.browserAutomation": {
          "type": "string",
          "enum": [
            "puppeteer",
            "playwright"
          ],
          "default": "playwright",
          "description": "Choose the browser automation tool."
        },
        "markdownExtraJS.playwright.waitTimeout": {
          "type": "number",
          "default": 30000,
          "description": "Time (ms) to wait for browser navigation."
        },
        "markdownExtraJS.playwright.executablePath": {
          "type": "string",
          "default": null,
          "description": "Path to the browser executable."
        },
        "markdownExtraJS.playwright.devtools": {
          "type": "boolean",
          "default": false,
          "description": "Open developer tools on launch."
        },
        "markdownExtraJS.playwright.headless": {
          "type": "boolean",
          "default": true,
          "description": "Run browser in headless mode."
        },
        "markdownExtraJS.playwright.timeout": {
          "type": "number",
          "default": 30000,
          "description": "Time (ms) to wait for browser launch."
        },
        "markdownExtraJS.playwright.locale": {
          "type": "string",
          "default": null,
          "description": "Set the browser's language/region."
        },
        "markdownExtraJS.playwright.offline": {
          "type": "boolean",
          "default": false,
          "description": "Run browser in offline mode."
        },
        "markdownExtraJS.playwright.timezoneId": {
          "type": "string",
          "default": null,
          "description": "Set the browser's time zone."
        },
        "markdownExtraJS.playwright.useProxy": {
          "type": "boolean",
          "default": false,
          "description": "Use proxy settings from environment variables."
        },
        "markdownExtraJS.puppeteer.waitTimeout": {
          "type": "number",
          "default": 30000,
          "description": "Time (ms) to wait for browser navigation."
        },
        "markdownExtraJS.puppeteer.executablePath": {
          "type": "string",
          "default": null,
          "description": "Path to the browser executable."
        },
        "markdownExtraJS.puppeteer.devtools": {
          "type": "boolean",
          "default": false,
          "description": "Open developer tools on launch."
        },
        "markdownExtraJS.puppeteer.headless": {
          "type": "boolean",
          "default": true,
          "description": "Run browser in headless mode."
        },
        "markdownExtraJS.puppeteer.timeout": {
          "type": "number",
          "default": 30000,
          "description": "Time (ms) to wait for browser launch."
        },
        "markdownExtraJS.puppeteer.locale": {
          "type": "string",
          "default": null,
          "description": "Set the browser's language/region."
        },
        "markdownExtraJS.puppeteer.timezoneId": {
          "type": "string",
          "default": null,
          "description": "Set the browser's time zone."
        },
        "markdownExtraJS.puppeteer.useProxy": {
          "type": "boolean",
          "default": false,
          "description": "Use proxy settings from environment variables."
        },
        "markdownExtraJS.puppeteer.uninstallOldChromium": {
          "type": "boolean",
          "default": true,
          "description": "Remove old Chromium versions during installation."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "check-types": "tsc --noEmit",
    "lint": "eslint src"
  },
  "devDependencies": {
    "@types/css": "^0.0.38",
    "@types/markdown-it": "^14.1.2",
    "@types/node": "^22.10.2",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.18.2",
    "@typescript-eslint/parser": "^8.18.2",
    "esbuild": "^0.24.2",
    "eslint": "^9.17.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.7.2"
  },
  "dependencies": {
    "@marp-team/marp-core": "^4.0.1",
    "@morish000/markdown-it-extrajs": "^0.0.3",
    "@types/markdown-it-attrs": "^4.1.3",
    "@vscode/markdown-it-katex": "^1.1.1",
    "css": "^3.0.0",
    "gray-matter": "^4.0.3",
    "markdown-it": "^14.1.0",
    "markdown-it-attrs": "^4.3.1",
    "playwright-core": "^1.49.1",
    "puppeteer-core": "^23.11.1"
  }
}