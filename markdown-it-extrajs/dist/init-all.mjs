var S={discardFrontMatter:!0,outputScriptTag:!0,useMermaid:!1,useFontAwesome:!1,useUnoCSS:!1,mermaidUrl:"https://esm.sh/mermaid",mermaidElkUrl:"https://esm.sh/@mermaid-js/layout-elk",fontAwesomeUrl:"https://esm.sh/@fortawesome",unoCSSUrl:"https://esm.sh/@unocss",iconifyJsonCDN:"https://esm.sh"};var f=async(t=S.unoCSSUrl)=>await import(`${t}/preset-icons/core`).then(e=>e.icons),d=(t=S.iconifyJsonCDN)=>e=>()=>import(`${t}/@iconify-json/${e}`).then(o=>o.icons);function C(t){for(var e=[],o=1;o<arguments.length;o++)e[o-1]=arguments[o];var n=Array.from(typeof t=="string"?[t]:t);n[n.length-1]=n[n.length-1].replace(/\r?\n([\t ]*)$/,"");var m=n.reduce(function(p,s){var r=s.match(/\n([\t ]+|(?!\s).)/g);return r?p.concat(r.map(function(a){var c,i;return(i=(c=a.match(/[\t ]/g))===null||c===void 0?void 0:c.length)!==null&&i!==void 0?i:0})):p},[]);if(m.length){var u=new RegExp(`
[	 ]{`+Math.min.apply(Math,m)+"}","g");n=n.map(function(p){return p.replace(u,`
`)})}n[0]=n[0].replace(/^\r?\n/,"");var l=n[0];return e.forEach(function(p,s){var r=l.match(/(?:^|\n)( *)$/),a=r?r[1]:"",c=p;typeof p=="string"&&p.includes(`
`)&&(c=String(p).split(`
`).map(function(i,y){return y===0?i:""+a+i}).join(`
`)),l+=c+n[s+1]}),l}var U=async(t={},e={})=>{let o=function(n){let m=document.createElement("div");return n=encodeURIComponent(n).replace(/%26/g,"&").replace(/%23/g,"#").replace(/%3B/g,";"),m.innerHTML=n,decodeURIComponent(m.textContent)};if(t.mermaidUrl){let{default:n}=await import(t.mermaidUrl);if(t.mermaidElkUrl){let{default:r}=await import(t.mermaidElkUrl);n.registerLayoutLoaders(r)}let m=d(t.iconifyJsonCDN),u=await f(t.unoCSSUrl),l=()=>{let r=[];return u.forEach(a=>{r.push({name:a,loader:m(a)})}),r};n.registerIconPacks(l()),n.initialize({...e.mermaidConfig??{},startOnLoad:!1,suppressErrorRendering:!0});let s=Array.from(document.querySelectorAll(".mermaid")).map(async r=>{if(r.getAttribute("data-processed"))return;r.setAttribute("data-processed","true");let a=r.textContent;if(r.querySelectorAll("svg").forEach(c=>c.remove()),a){let c=await n.render(`mermaid-${crypto.randomUUID()}`,C(o(a)).trim().replace(/<br\s*\/?>/gi,"<br/>"));r.innerHTML=c.svg,c.bindFunctions?.(r)}}).map(r=>r.catch(a=>console.error(a)));await Promise.all(s)}};var v=async(t={},e={})=>{try{let[o,n,m,u]=await Promise.all([import(t.fontAwesomeUrl+"/fontawesome-svg-core"),import(t.fontAwesomeUrl+"/free-solid-svg-icons"),import(t.fontAwesomeUrl+"/free-regular-svg-icons"),import(t.fontAwesomeUrl+"/free-brands-svg-icons")]),l=s=>Object.entries(s).filter(([r,a])=>r!=="prefix"&&r!=="default"&&typeof a!="string").map(([,r])=>r),p=[...l(n),...l(m),...l(u)];if(["familyPrefix","cssPrefix","styleDefault","familyDefault","replacementClass","autoReplaceSvg","autoA11y","searchPseudoElements","keepOriginalSource","measurePerformance","mutateApproach","showMissingIcons"].forEach(s=>e.fontAwesomeConfig?.[s]&&(o.config[s]=e.fontAwesomeConfig[s])),o.config.observeMutations=!1,o.config.autoAddCss=!1,o.library.add(...p),o.dom.i2svg(),!document.getElementById("extrajs-fontawesome")){let s=document.createElement("style");s.id="extrajs-fontawesome",s.textContent=o.dom.css(),document.head.appendChild(s),new MutationObserver(()=>{s&&s.textContent===""&&(s.textContent=o.dom.css())}).observe(s,{characterData:!0,childList:!0,subtree:!0})}}catch(o){throw o}};var w=async(t={},e={})=>{let[{default:o},{default:n},{default:m},{default:u},{default:l},{default:p},{default:s},{default:r},{default:a},{default:c}]=await Promise.all([import(t.unoCSSUrl+"/runtime"),e.presetWind?import(t.unoCSSUrl+"/preset-wind"):Promise.resolve({}),!e.presetWind&&e.presetMini?import(t.unoCSSUrl+"/preset-mini"):Promise.resolve({}),!e.presetWind&&!e.presetMini?import(t.unoCSSUrl+"/preset-uno"):Promise.resolve({}),e.presetIcons?import(t.unoCSSUrl+"/preset-icons/browser"):Promise.resolve({}),e.presetAttributify?import(t.unoCSSUrl+"/preset-attributify"):Promise.resolve({}),e.presetTypography?import(t.unoCSSUrl+"/preset-typography"):Promise.resolve({}),e.presetWebFonts?import(t.unoCSSUrl+"/preset-web-fonts"):Promise.resolve({}),e.presetTagify?import(t.unoCSSUrl+"/preset-tagify"):Promise.resolve({}),e.presetRemToPx?import(t.unoCSSUrl+"/preset-rem-to-px"):Promise.resolve({})]),i=[];if(e.presetWind?i.push(n(e.presetWind)):e.presetMini?i.push(m(e.presetMini)):i.push(u()),e.presetIcons){let g={...e.presetIcons},I=d(t.iconifyJsonCDN),b=await f(t.unoCSSUrl),P=()=>{let h={};return b.forEach(x=>{h[x]=I(x)}),h};g.autoInstall=!1,g.collections={...P()},i.push(l(g))}e.presetAttributify&&i.push(p(e.presetAttributify)),e.presetTypography&&i.push(s(e.presetTypography)),e.presetWebFonts&&i.push(r(e.presetWebFonts)),e.presetTagify&&i.push(a(e.presetTagify)),e.presetRemToPx&&i.push(c());let y=e.rules??[];o({defaults:{rules:y,presets:i}})};var k=async(t={},e={})=>{let o=[];t.useMermaid&&o.push(U(t,e)),t.useFontAwesome&&o.push(v(t,e)),t.useUnoCSS&&o.push(w(t,e)),o.length>0&&await Promise.all(o)};export{k as initAll};
//# sourceMappingURL=init-all.mjs.map
