var S={discardFrontMatter:!0,outputScriptTag:!0,useMermaid:!1,useFontAwesome:!1,useUnoCSS:!1,mermaidUrl:"https://esm.sh/mermaid",mermaidElkUrl:"https://esm.sh/@mermaid-js/layout-elk",fontAwesomeUrl:"https://esm.sh/@fortawesome",unoCSSUrl:"https://esm.sh/@unocss",iconifyJsonCDN:"https://esm.sh"};var f=async(t=S.unoCSSUrl)=>await import(`${t}/preset-icons/core`).then(e=>e.icons),d=(t=S.iconifyJsonCDN)=>e=>()=>import(`${t}/@iconify-json/${e}`).then(r=>r.icons);function C(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];var n=Array.from(typeof t=="string"?[t]:t);n[n.length-1]=n[n.length-1].replace(/\r?\n([\t ]*)$/,"");var m=n.reduce(function(a,o){var i=o.match(/\n([\t ]+|(?!\s).)/g);return i?a.concat(i.map(function(p){var c,s;return(s=(c=p.match(/[\t ]/g))===null||c===void 0?void 0:c.length)!==null&&s!==void 0?s:0})):a},[]);if(m.length){var u=new RegExp(`
[	 ]{`+Math.min.apply(Math,m)+"}","g");n=n.map(function(a){return a.replace(u,`
`)})}n[0]=n[0].replace(/^\r?\n/,"");var l=n[0];return e.forEach(function(a,o){var i=l.match(/(?:^|\n)( *)$/),p=i?i[1]:"",c=a;typeof a=="string"&&a.includes(`
`)&&(c=String(a).split(`
`).map(function(s,y){return y===0?s:""+p+s}).join(`
`)),l+=c+n[o+1]}),l}var w=async(t={},e={})=>{let r=function(n){let m=document.createElement("div");return n=encodeURIComponent(n).replace(/%26/g,"&").replace(/%23/g,"#").replace(/%3B/g,";"),m.innerHTML=n,decodeURIComponent(m.textContent)};if(t.mermaidUrl){let{default:n}=await import(t.mermaidUrl);if(t.mermaidElkUrl){let{default:o}=await import(t.mermaidElkUrl);n.registerLayoutLoaders(o)}let m=d(t.iconifyJsonCDN),u=await f(t.unoCSSUrl),l=()=>{let o=[];return u.forEach(i=>{o.push({name:i,loader:m(i)})}),o};n.registerIconPacks(l()),n.initialize({...e.mermaidConfig??{},startOnLoad:!1,suppressErrorRendering:!0});let a=async()=>{let i=Array.from(document.querySelectorAll(".mermaid")).map(async p=>{if(p.getAttribute("data-processed"))return;p.setAttribute("data-processed","true");let c=p.textContent;if(p.querySelectorAll("svg").forEach(s=>s.remove()),c){let s=await n.render(`mermaid-${crypto.randomUUID()}`,C(r(c)).trim().replace(/<br\s*\/?>/gi,"<br/>"));p.innerHTML=s.svg,s.bindFunctions?.(p)}}).map(p=>p.catch(c=>console.error(c)));await Promise.all(i)};document.readyState!=="complete"&&window.addEventListener("load",a,{once:!0}),await a()}};var v=async(t={},e={})=>{try{let[r,n,m,u]=await Promise.all([import(t.fontAwesomeUrl+"/fontawesome-svg-core"),import(t.fontAwesomeUrl+"/free-solid-svg-icons"),import(t.fontAwesomeUrl+"/free-regular-svg-icons"),import(t.fontAwesomeUrl+"/free-brands-svg-icons")]),l=o=>Object.entries(o).filter(([i,p])=>i!=="prefix"&&i!=="default"&&typeof p!="string").map(([,i])=>i),a=[...l(n),...l(m),...l(u)];if(["familyPrefix","cssPrefix","styleDefault","familyDefault","replacementClass","autoReplaceSvg","autoA11y","searchPseudoElements","keepOriginalSource","measurePerformance","mutateApproach","showMissingIcons"].forEach(o=>e.fontAwesomeConfig?.[o]&&(r.config[o]=e.fontAwesomeConfig[o])),r.config.observeMutations=!1,r.config.autoAddCss=!1,r.library.add(...a),r.dom.i2svg(),!document.getElementById("extrajs-fontawesome")){let o=document.createElement("style");o.id="extrajs-fontawesome",o.textContent=r.dom.css(),document.head.appendChild(o),new MutationObserver(()=>{o&&o.textContent===""&&(o.textContent=r.dom.css())}).observe(o,{characterData:!0,childList:!0,subtree:!0})}}catch(r){throw r}};var U=async(t={},e={})=>{let[{default:r},{default:n},{default:m},{default:u},{default:l},{default:a},{default:o},{default:i},{default:p},{default:c}]=await Promise.all([import(t.unoCSSUrl+"/runtime"),e.presetWind?import(t.unoCSSUrl+"/preset-wind"):Promise.resolve({}),!e.presetWind&&e.presetMini?import(t.unoCSSUrl+"/preset-mini"):Promise.resolve({}),!e.presetWind&&!e.presetMini?import(t.unoCSSUrl+"/preset-uno"):Promise.resolve({}),e.presetIcons?import(t.unoCSSUrl+"/preset-icons/browser"):Promise.resolve({}),e.presetAttributify?import(t.unoCSSUrl+"/preset-attributify"):Promise.resolve({}),e.presetTypography?import(t.unoCSSUrl+"/preset-typography"):Promise.resolve({}),e.presetWebFonts?import(t.unoCSSUrl+"/preset-web-fonts"):Promise.resolve({}),e.presetTagify?import(t.unoCSSUrl+"/preset-tagify"):Promise.resolve({}),e.presetRemToPx?import(t.unoCSSUrl+"/preset-rem-to-px"):Promise.resolve({})]),s=[];if(e.presetWind?s.push(n(e.presetWind)):e.presetMini?s.push(m(e.presetMini)):s.push(u()),e.presetIcons){let g={...e.presetIcons},I=d(t.iconifyJsonCDN),b=await f(t.unoCSSUrl),E=()=>{let h={};return b.forEach(x=>{h[x]=I(x)}),h};g.autoInstall=!1,g.collections={...E()},s.push(l(g))}e.presetAttributify&&s.push(a(e.presetAttributify)),e.presetTypography&&s.push(o(e.presetTypography)),e.presetWebFonts&&s.push(i(e.presetWebFonts)),e.presetTagify&&s.push(p(e.presetTagify)),e.presetRemToPx&&s.push(c());let y=e.rules??[];r({defaults:{rules:y,presets:s}})};var k=async(t={},e={})=>{let r=[];t.useMermaid&&r.push(w(t,e)),t.useFontAwesome&&r.push(v(t,e)),t.useUnoCSS&&r.push(U(t,e)),r.length>0&&await Promise.all(r)};export{k as initAll};
//# sourceMappingURL=init-all.mjs.map
