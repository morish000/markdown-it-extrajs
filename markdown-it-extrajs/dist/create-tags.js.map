{
  "version": 3,
  "sources": ["../src/create-tags.ts"],
  "sourcesContent": ["import type { ExtraJSFrontMatter, ExtraJSOptions } from \"./types.js\";\nimport SRC_BASE64 from \"./base64js.js\";\n\nexport const escapeScriptClosingTags = (str: string): string => {\n  return str.replace(/<\\/script>/gi, function (match) {\n    return \"<\\\\/\" + match.slice(2);\n  });\n};\n\nexport const escapeForHTML = (str: string): string => {\n  return str.replace(/[&<>\"']/g, (match) => {\n    switch (match) {\n      case \"&\":\n        return \"&amp;\";\n      case \"<\":\n        return \"&lt;\";\n      case \">\":\n        return \"&gt;\";\n      case '\"':\n        return \"&quot;\";\n      case \"'\":\n        return \"&#39;\";\n      default:\n        return match;\n    }\n  });\n};\n\nexport const createTemplateTag = (\n  options: ExtraJSOptions,\n  frontMatter: ExtraJSFrontMatter,\n): string =>\n  (options.useMermaid || options.useFontAwesome ||\n    options.useUnoCSS)\n    ? `\n<template\n  id=\"extrajs\"\n  ${`data-extrajs-options=\"${btoa(JSON.stringify(options))}\"`}\n  ${`data-extrajs-frontMatter=\"${btoa(JSON.stringify(frontMatter))}\"`}>\n</template>`\n    : \"\";\n\nexport const createScriptTag = (\n  options: ExtraJSOptions,\n  frontMatter: ExtraJSFrontMatter,\n): string =>\n  (options.useMermaid || options.useFontAwesome ||\n    options.useUnoCSS) && options.outputScriptTag\n    ? `\n<script type=\"module\">\n  const { initAll } = await import(\"data:text/javascript;base64,${SRC_BASE64.INIT_ALL}\");\n  const options = ${escapeScriptClosingTags(JSON.stringify(options))};\n  const frontMatter = ${escapeScriptClosingTags(JSON.stringify(frontMatter))};\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", initAll(options, frontMatter));\n  } else {\n    await initAll(options, frontMatter);\n  }\n</script>`\n    : \"\";\n"],
  "mappings": "AACA,OAAO,gBAAgB;AAEhB,MAAM,0BAA0B,CAAC,QAAwB;AAC9D,SAAO,IAAI,QAAQ,gBAAgB,SAAU,OAAO;AAClD,WAAO,SAAS,MAAM,MAAM,CAAC;AAAA,EAC/B,CAAC;AACH;AAEO,MAAM,gBAAgB,CAAC,QAAwB;AACpD,SAAO,IAAI,QAAQ,YAAY,CAAC,UAAU;AACxC,YAAQ,OAAO;AAAA,MACb,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF,CAAC;AACH;AAEO,MAAM,oBAAoB,CAC/B,SACA,gBAEC,QAAQ,cAAc,QAAQ,kBAC7B,QAAQ,YACN;AAAA;AAAA;AAAA,IAGF,yBAAyB,KAAK,KAAK,UAAU,OAAO,CAAC,CAAC,GAAG;AAAA,IACzD,6BAA6B,KAAK,KAAK,UAAU,WAAW,CAAC,CAAC,GAAG;AAAA,eAE/D;AAEC,MAAM,kBAAkB,CAC7B,SACA,iBAEC,QAAQ,cAAc,QAAQ,kBAC7B,QAAQ,cAAc,QAAQ,kBAC5B;AAAA;AAAA,kEAE4D,WAAW,QAAQ;AAAA,oBACjE,wBAAwB,KAAK,UAAU,OAAO,CAAC,CAAC;AAAA,wBAC5C,wBAAwB,KAAK,UAAU,WAAW,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAOtE;",
  "names": []
}
