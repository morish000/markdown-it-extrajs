{
  "version": 3,
  "sources": ["../define.ts", "../src/plugin.ts", "../src/create-tags.ts", "../src/index.ts"],
  "sourcesContent": ["async function getBase64Contents(filePath: string): Promise<string> {\n  const content = await Deno.readFile(filePath);\n  return btoa(new TextDecoder().decode(content));\n}\n\nconst replaceMappings: Record<string, string> = {\n  \"SRC_BASE64.INIT_MERMAID\": \"dist/init-mermaid.mjs\",\n  \"SRC_BASE64.INIT_FONT_AWESOME\": \"dist/init-font-awesome.mjs\",\n  \"SRC_BASE64.INIT_UNO_CSS\": \"dist/init-uno-css.mjs\",\n};\n\nconst defines: Record<string, string> = {};\n\nfor (const [key, filePath] of Object.entries(replaceMappings)) {\n  defines[`${key}`] = `\"${await getBase64Contents(filePath)}\"`;\n}\n\ndeclare global {\n  // deno-lint-ignore no-var\n  var SRC_BASE64: Record<string, string>;\n}\n\nglobalThis.SRC_BASE64 = {\n  INIT_MERMAID: defines[\"SRC_BASE64.INIT_MERMAID\"],\n  INIT_FONT_AWESOME: defines[\"SRC_BASE64.INIT_FONT_AWESOME\"],\n  INIT_UNO_CSS: defines[\"SRC_BASE64.INIT_UNO_CSS\"],\n};\n\nexport default defines;\n", "// @deno-types=\"@types/markdown-it\"\nimport type MarkdownIt from \"markdown-it\";\nimport markdownItFrontMatter from \"markdown-it-front-matter\";\nimport grayMatter from \"gray-matter\";\nimport { createScriptTag, createTemplateTag } from \"./create-tags.ts\";\nimport type { ExtraJSFrontMatter, ExtraJSOptions } from \"./types.ts\";\n\nconst defaultOptions: ExtraJSOptions = {\n  discardFrontMatter: true,\n  useMermaid: false,\n  mermaidUrl: \"https://esm.sh/mermaid\",\n  useFontAwesome: false,\n  fontAwesomeUrl: \"https://esm.sh/@fortawesome\",\n  useUnoCSS: false,\n  unoCSSUrl: \"https://esm.sh/@unocss\",\n  unoCSSPresetIconCDN: \"https://esm.sh/\",\n  outputScriptTag: true,\n};\n\nexport function extraJsPlugin(md: MarkdownIt, userOptions: ExtraJSOptions) {\n  const { renderer: { render }, parse } = md;\n\n  let frontMatter: ExtraJSFrontMatter = {};\n\n  if (userOptions.discardFrontMatter) {\n    md.use(markdownItFrontMatter, (_fm: string) => {\n      // Discard front matter\n    });\n  }\n\n  md.parse = (markdown: string, env) => {\n    frontMatter = grayMatter(markdown).data.extrajs ?? {};\n    return parse.call(md, markdown, env);\n  };\n\n  md.renderer.render = function (\n    ...args\n  ) {\n    const options: ExtraJSOptions = {\n      ...defaultOptions,\n      ...userOptions,\n      ...(!frontMatter.useMermaid ? { useMermaid: false } : {}),\n      ...(!frontMatter.useFontAwesome ? { useFontAwesome: false } : {}),\n      ...(!frontMatter.useUnoCSS ? { useUnoCSS: false } : {}),\n    };\n\n    return render.apply(md.renderer, args) +\n      createTemplateTag(options, frontMatter) +\n      createScriptTag(options, frontMatter);\n  };\n}\n\nexport default extraJsPlugin;\n", "import type { ExtraJSFrontMatter, ExtraJSOptions } from \"./types.ts\";\n\ndeclare const SRC_BASE64: {\n  INIT_MERMAID: string;\n  INIT_FONT_AWESOME: string;\n  INIT_UNO_CSS: string;\n};\n\nif (typeof SRC_BASE64 === \"undefined\") {\n  await import(\"../define.ts\");\n}\n\nexport const initAll = (\n  extrajsOptions: ExtraJSOptions,\n): string =>\n  (extrajsOptions.useMermaid || extrajsOptions.useFontAwesome ||\n      extrajsOptions.useUnoCSS)\n    ? `\nexport default async (options = {}, frontMatter = {}, _conf = {}) => {\n  const tasks = [];\n${\n      extrajsOptions.useMermaid\n        ? `\n  const mermaidScript = document.getElementById('extrajs')?.getAttribute('data-extrajs-mermaid-js');\n  if (mermaidScript) {\n    tasks.push(\n      (async () => {\n        const initMermaid = await import(\"data:text/javascript;base64,\" + mermaidScript);\n        await initMermaid.default(options, frontMatter, _conf);\n      })()\n    );\n  }`\n        : \"\"\n    }\n${\n      extrajsOptions.useFontAwesome\n        ? `\n  const fontAwesomeScript = document.getElementById('extrajs')?.getAttribute('data-extrajs-font-awesome');\n  if (fontAwesomeScript) {\n    tasks.push(\n      (async () => {\n        const initFontAwesome = await import(\"data:text/javascript;base64,\" + fontAwesomeScript);\n        await initFontAwesome.default(options, frontMatter, _conf);\n      })()\n    );\n  }`\n        : \"\"\n    }\n${\n      extrajsOptions.useUnoCSS\n        ? `\n  const unoCSSScript = document.getElementById('extrajs')?.getAttribute('data-extrajs-uno-css');\n  if (unoCSSScript) {\n    tasks.push(\n      (async () => {\n        const initUnoCSS = await import(\"data:text/javascript;base64,\" + unoCSSScript);\n        await initUnoCSS.default(options, frontMatter, _conf);\n      })()\n    );\n  }`\n        : \"\"\n    }\n  tasks.length > 0 && await Promise.all(tasks);\n};`\n    : \"\";\n\nexport const createTemplateTag = (\n  extrajsOptions: ExtraJSOptions,\n  frontMatter: ExtraJSFrontMatter,\n): string =>\n  (extrajsOptions.useMermaid || extrajsOptions.useFontAwesome ||\n      extrajsOptions.useUnoCSS)\n    ? `\n<template\n  id=\"extrajs\"\n${\n      extrajsOptions.useMermaid\n        ? `data-extrajs-mermaid-js=\"${SRC_BASE64.INIT_MERMAID}\"`\n        : \"\"\n    }\n${\n      extrajsOptions.useFontAwesome\n        ? `data-extrajs-font-awesome=\"${SRC_BASE64.INIT_FONT_AWESOME}\"`\n        : \"\"\n    }\n${\n      extrajsOptions.useUnoCSS\n        ? `data-extrajs-uno-css=\"${SRC_BASE64.INIT_UNO_CSS}\"`\n        : \"\"\n    }\n${`data-extrajs-init=\"${btoa(initAll(extrajsOptions))}\"`}\n${`data-extrajs-options=\"${\n      btoa(\"export default\" + JSON.stringify(extrajsOptions))\n    }\"`}\n${`data-extrajs-frontMatter=\"${\n      btoa(\"export default\" + JSON.stringify(frontMatter))\n    }\"`}>\n</template>`\n    : \"\";\n\nexport const createScriptTag = (\n  extrajsOptions: ExtraJSOptions,\n  frontMatter: ExtraJSFrontMatter,\n): string =>\n  (extrajsOptions.useMermaid || extrajsOptions.useFontAwesome ||\n      extrajsOptions.useUnoCSS) && extrajsOptions.outputScriptTag\n    ? `\n<script type=\"module\">\n  const initScript = document.getElementById('extrajs')?.getAttribute('data-extrajs-init');\n  if (initScript) {\n    const init = await import(\"data:text/javascript;base64,\" + initScript);\n    await init.default(\n      ${JSON.stringify(extrajsOptions)},\n      ${JSON.stringify(frontMatter)},\n      {}\n    );\n  }\n</script>`\n    : \"\";\n", "import extraJsPlugin from \"./plugin.ts\";\nexport default extraJsPlugin;\n\nexport * from \"./types.ts\";\nexport * from \"./create-tags.ts\";\n"],
  "mappings": "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",
  "names": ["define_exports", "__export", "define_default", "getBase64Contents", "filePath", "content", "replaceMappings", "defines", "init_define", "__esmMin", "key", "markdownItFrontMatter", "grayMatter", "initAll", "extrajsOptions", "createTemplateTag", "frontMatter", "createScriptTag", "defaultOptions", "extraJsPlugin", "md", "userOptions", "render", "parse", "frontMatter", "markdownItFrontMatter", "_fm", "markdown", "env", "grayMatter", "args", "options", "createTemplateTag", "createScriptTag", "plugin_default", "src_default", "plugin_default"]
}
